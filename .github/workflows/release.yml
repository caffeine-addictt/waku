name: Release

on:
  push:
    tags:
      - "*"

permissions:
  id-token: write
  packages: write
  contents: write

jobs:
  build:
    name: Building project
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Check tag updated
        run: |
          set -xe

          CURRENT_VERSION=$(grep -oP 'const Version = "\K[\d\w\-\.]+' 'pkg/version/version.go' | head -n 1)
          echo "Current version in version.go: $CURRENT_VERSION"

          GIT_TAG=$(git describe --tags --abbrev=0 | sed 's/^v//')
          echo "Git tag: $GIT_TAG"

          if [ "$CURRENT_VERSION" != "$GIT_TAG" ]; then
            echo "Version mismatch: File version ($CURRENT_VERSION) does not match Git tag ($GIT_TAG)"
            exit 1
          else
            echo "Version matches: $CURRENT_VERSION"
          fi

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cache/go-build
            /go/pkg/mod
          key: go-${{ runner.os }}-${{ hashFiles('go.sum') }}
          restore-keys: go-${{ runner.os }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Cosign
        uses: sigstore/cosign-installer@v3

      - name: setup-snapcraft
        run: |
          sudo snap install snapcraft --classic

      - name: Login to docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_KEY }}

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_PAT: ${{ secrets.GH_PAT }}
          AUR_PRIVATE_KEY: ${{ secrets.AUR_KEY }}
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_LOGIN }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PWD }}
